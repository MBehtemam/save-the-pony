import MoveEnum from "../Enums/MoveEnum";
import IDirectionResponse from "../Interfaces/IDirectionResponse";
import getMoveDirection from "../util/getMoveDirection";

const data = [
  ["west", "north"],
  ["west", "north"],
  ["north"],
  ["west", "north"],
  ["north"],
  ["north"],
  ["north"],
  ["north"],
  ["west", "north"],
  ["north"],
  ["north"],
  ["west", "north"],
  ["north"],
  ["north"],
  ["north"],
  ["west"],
  ["west"],
  ["west"],
  ["west"],
  ["north"],
  ["north"],
  ["north"],
  ["west"],
  [],
  ["west"],
  ["north"],
  [],
  ["north"],
  ["west"],
  ["west"],
  ["west"],
  ["west"],
  ["west"],
  ["north"],
  ["north"],
  ["north"],
  ["west", "north"],
  ["north"],
  ["west"],
  ["north"],
  ["west", "north"],
  ["north"],
  ["north"],
  [],
  ["west"],
  ["west"],
  ["west"],
  ["west", "north"],
  ["north"],
  ["west", "north"],
  ["west"],
  ["west"],
  ["west"],
  ["north"],
  ["north"],
  ["west"],
  ["west", "north"],
  ["north"],
  ["north"],
  [],
  ["west"],
  [],
  ["west"],
  ["west"],
  ["west"],
  ["west"],
  ["west"],
  ["west", "north"],
  ["north"],
  ["west"],
  ["west"],
  ["north"],
  ["west"],
  ["north"],
  ["north"],
  ["west", "north"],
  ["north"],
  [],
  ["west"],
  [],
  ["west"],
  [],
  ["west"],
  ["north"],
  ["west"],
  ["west"],
  ["west"],
  ["west", "north"],
  ["north"],
  ["north"],
  ["west", "north"],
  [],
  ["west", "north"],
  ["north"],
  ["west"],
  ["north"],
  ["west", "north"],
  [],
  ["west"],
  [],
  ["west"],
  ["west"],
  [],
  ["north"],
  ["west"],
  ["west"],
  ["north"],
  ["west"],
  ["west"],
  ["north"],
  [],
  ["west"],
  ["north"],
  ["west", "north"],
  ["north"],
  ["north"],
  ["north"],
  ["north"],
  ["north"],
  ["west"],
  ["west"],
  ["west"],
  ["north"],
  ["west"],
  ["north"],
  ["west", "north"],
  ["north"],
  ["west"],
  ["west"],
  ["north"],
  ["west", "north"],
  ["north"],
  ["north"],
  ["west"],
  ["west"],
  ["west"],
  ["north"],
  ["west"],
  ["north"],
  ["west"],
  ["west"],
  ["west"],
  [],
  ["west", "north"],
  [],
  ["west"],
  ["north"],
  ["north"],
  ["west"],
  [],
  ["west"],
  ["west", "north"],
  ["north"],
  [],
  ["west", "north"],
  [],
  ["west", "north"],
  ["north"],
  ["west"],
  ["north"],
  ["north"],
  ["north"],
  ["west"],
  ["north"],
  ["west"],
  ["west"],
  ["west"],
  ["west"],
  ["west", "north"],
  [],
  ["west", "north"],
  [],
  ["west"],
  [],
  ["west", "north"],
  ["west", "north"],
  [],
  ["west"],
  ["west", "north"],
  [],
  ["west"],
  ["west"],
  ["north"],
  ["west"],
  ["west", "north"],
  [],
  ["west", "north"],
  ["north"],
  ["west"],
  [],
  ["west"],
  ["west", "north"],
  [],
  ["west"],
  ["north"],
  ["west"],
  ["west", "north"],
  ["west"],
  [],
  ["west", "north"],
  ["north"],
  ["west"],
  ["west"],
  ["north"],
  ["north"],
  [],
  ["west", "north"],
  [],
  ["north"],
  ["west"],
  ["west"],
  [],
  ["north"],
  ["north"],
  [],
  ["west"],
  [],
  ["west", "north"],
  ["north"],
  ["north"],
  ["north"],
  [],
  ["north"],
  ["north"],
  []
];
const width = 15;
describe("Tests for Get correct move direction", () => {
  it("should move to West", () => {
    expect(
      getMoveDirection({
        data,
        interestedPosition: 12,
        ponyPosition: 13,
        width: 15
      })
    ).toEqual({ ok: true, direction: MoveEnum.WEST });
  });

  it("should move to East", () => {
    expect(
      getMoveDirection({
        data,
        interestedPosition: 16,
        ponyPosition: 15,
        width: 15
      })
    ).toEqual({ ok: true, direction: MoveEnum.EAST });
  });

  it("should move to North", () => {
    expect(
      getMoveDirection({
        data,
        interestedPosition: 7,
        ponyPosition: 22,
        width: 15
      })
    ).toEqual({ ok: true, direction: MoveEnum.NORTH });
  });

  it("should move to South", () => {
    expect(
      getMoveDirection({
        data,
        interestedPosition: 17,
        ponyPosition: 2,
        width: 15
      })
    ).toEqual({ ok: true, direction: MoveEnum.SOUTH });
  });
  it("bad move 1 (2 steps)", () => {
    expect(
      getMoveDirection({
        data,
        interestedPosition: 12,
        ponyPosition: 15,
        width: 15
      })
    ).toEqual({ ok: false, direction: MoveEnum.WRONG_MOVE });
  });
});
